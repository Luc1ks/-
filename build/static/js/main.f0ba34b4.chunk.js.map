{"version":3,"sources":["services/TokenService/TokenService.js","urls/friendsUrls.js","context/SocketContext.js","components/AuthInput/AuthInput.js","views/Auth/Auth.js","components/PrivateRoute/PrivateRoute.js","components/PreLoader/PreLoader.js","frontUrls/frontAuthUrl.js","urls/profileUrls.js","services/ProfileService/ProfileService.js","components/ProfileData/ProfileData.js","urls/partyUrls.js","services/PartyService/PartyService.js","components/btns/btns.js","components/Overlay/Overlay.js","components/Party/Party.js","urls/queueUrls.js","services/QueueService/QueueService.js","components/Search/Search.js","views/MathMaking/MatchMaking.js","components/Navbar/Navbar.js","services/FriendsService/FriendsService.js","components/Friend/Friend.js","views/Friends/Friends.js","components/Invite/Invite.js","components/FriendReq/FriendReq.js","components/Notifications/Notifications.js","urls/notificationsUrls.js","services/NotificationsService/NotificationsService.js","views/NotificationsView/NotificationsView.js","App.js","serviceWorker.js","index.js","urls/authUrls.js","services/AuthService/AuthService.js","urls/socketUrl.js","services/JwtErrorService/JwtErrorService.js","services/FetchService/FetchService.js","urls/baseUrl.js"],"names":["TokenService","localStorage","getItem","token","setItem","clear","friendListUrl","baseUrl","addFriendUrl","removeFriendUrl","SocketContext","createContext","socket","io","connect","socketUrl","AuthInput","placeHodler","rest","type","className","placeholder","Auth","setSocket","useState","isLogin","setIsLogin","email","setEmail","password","setPassword","username","setUsername","so2_id","setSo2_id","so2_nickname","setSo2_nickname","err","setErr","isAuthtorizing","setIsAuthtorizing","a","length","AuthService","singup","result","authorize","then","console","log","signin","signinResult","name","onChange","e","target","value","onClick","signIn","signUp","PrivateRoute","path","children","useContext","PreLoader","require","default","profileUrl","ProfileService","FetchService","get","res","body","error","JwtErrorService","refreshByErr","this","GetProfileByUsername","user","ProfileData","rating","bio","profile","setProfile","useEffect","GetOwnProfie","inviteToPartyUrl","acceptInviteUrl","rejectInviteUrl","leavePartyUrl","getPartyUrl","kickFromPartyUrl","PartyService","post","id","fetch","method","headers","Authorization","getAccessToken","json","data","CancelBtn","SubmitBtn","DeleteBtn","Overlay","show","Party","players","owner","party","setParty","setUser","setTarget","showOverlay","setShowOverlay","on","getParty","off","sendInvite","map","player","key","kick","leaveParty","joinQueueUrl","leaveQueueUrl","QueueService","partyStatuses","Search","isInSearch","setIsInSearch","shake","setShake","shakeAnime","setTimeout","status","context","LeaveQueue","JoinQueue","MatchMaking","routes","url","Navbar","location","useLocation","route","pathname","to","v4","FriendsService","friendName","addFriend","friendId","Friend","destroy","removeFriend","Friends","friends","setFriends","getFriends","friend","index","prevState","splice","Invite","from","isRemoving","setIsRemoving","rejectInvite","cancel","acceptInvite","accept","FriendReq","removing","setRemoving","Notifications","notifications","setNotifications","nots","notification","uuid","getNotsUrl","NotificationsService","NotificationsView","setNots","destroyFriendReq","destroyPartyReq","App","showPreloader","setShowPreloader","Provider","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","signupUrl","signinUrl","refreshUrl","access_token","setAccessToken","refreshToken","refresh_token","accessToken","query","secure","AauthService","refreshAccessToken","getRefreshToken","params","paramsStringified","querystring","stringify","creditionals","JSON"],"mappings":"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","file":"static/js/main.f0ba34b4.chunk.js","sourcesContent":["class TokenService {\r\n    static getRefreshToken() {\r\n        return localStorage.getItem('refreshToken')\r\n    }\r\n\r\n    static getAccessToken() {\r\n        return localStorage.getItem('accessToken')\r\n    }\r\n\r\n    static setRefreshToken(token) {\r\n        return localStorage.setItem('refreshToken', token);\r\n    }\r\n\r\n    static setAccessToken(token) {\r\n        return localStorage.setItem('accessToken', token);\r\n    }\r\n\r\n    static clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nexport default TokenService;","import baseUrl from './baseUrl';\r\n\r\nexport const friendListUrl = baseUrl + '/api/friends';\r\nexport const addFriendUrl = baseUrl + '/api/friends/add';\r\nexport const removeFriendUrl = baseUrl + '/api/friends/remove';\r\n","import { createContext } from 'react'\r\nimport io from 'socket.io-client';\r\nimport socketUrl from '../urls/socketUrl';\r\n\r\nconst SocketContext = createContext({\r\n    socket: io.connect(socketUrl)\r\n})\r\nexport default  SocketContext;","import React from 'react'\r\nimport './AuthInput.scss'\r\n\r\nexport default function AuthInput({placeHodler = null, ...rest}) {\r\n    return (\r\n        <input type=\"text\" className=\"authInput\" placeholder={placeHodler} {...rest}/>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport AuthInput from '../../components/AuthInput/AuthInput';\r\nimport './Auth.scss';\r\nimport AuthService from '../../services/AuthService/AuthService';\r\n\r\nfunction Auth({ setSocket }) {\r\n\tconst [isLogin, setIsLogin] = useState(false);\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [so2_id, setSo2_id] = useState('');\r\n\tconst [so2_nickname, setSo2_nickname] = useState('');\r\n\tconst [err, setErr] = useState('');\r\n\tconst [isAuthtorizing, setIsAuthtorizing] = useState(false);\r\n\r\n\tasync function signUp() {\r\n\t\tif (\r\n\t\t\temail.length > 2 &&\r\n\t\t\tusername.length > 2 &&\r\n\t\t\tpassword.length > 2 &&\r\n\t\t\tso2_id.length > 2 &&\r\n\t\t\tso2_nickname.length > 2 &&\r\n\t\t\t!isAuthtorizing\r\n\t\t) {\r\n\t\t\tsetIsAuthtorizing(true);\r\n\t\t\tconst result = await AuthService.singup(username, password, email, so2_nickname, so2_id);\r\n\t\t\t\r\n\t\t\tif (result.err) {\r\n\t\t\t\tsetErr(result.err);\r\n\t\t\t\tsetIsAuthtorizing(false);\r\n\t\t\t} else {\r\n\t\t\t\tawait AuthService.authorize().then((socket) => {\r\n\t\t\t\t\tconsole.log(socket, 'signing up');\r\n\t\t\t\t\tsetSocket(socket);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetErr('Минимальная длинна каждого поля 2 символа');\r\n\t\t}\r\n\t}\r\n\r\n\tasync function signIn() {\r\n\t\tif (username.length > 2 && password.length > 2 && isAuthtorizing === false) {\r\n\t\t\tsetIsAuthtorizing(true);\r\n\t\t\tconst signinResult = await AuthService.signin(username, password);\r\n\r\n\t\t\tif (!signinResult.err) {\r\n\t\t\t\tconst socket = await AuthService.authorize();\r\n\t\t\t\tsetSocket(socket);\r\n\t\t\t} else {\r\n\t\t\t\tsetErr(signinResult.err);\r\n\t\t\t\tsetIsAuthtorizing(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetErr('Минимальная длинна челена 2 символа')\r\n\t\t}\r\n\t}\r\n\r\n\tif (isLogin) {\r\n\t\treturn (\r\n\t\t\t<div className=\"auth\">\r\n\t\t\t\t<AuthInput placeHodler=\"Никнейм\" name=\"email\" onChange={(e) => setUsername(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"Пароль\" name=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n\r\n\t\t\t\t<p className=\"err\">{err}</p>\r\n\t\t\t\t<button className={`signin ${isAuthtorizing}`} onClick={() => signIn()}>\r\n\t\t\t\t\tВойти\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={`signup ${isAuthtorizing}`} onClick={() => setIsLogin(false)}>\r\n\t\t\t\t\tНет аккаунта\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"auth\">\r\n\t\t\t\t<AuthInput placeHodler=\"Email\" name=\"new email\" onChange={(e) => setEmail(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"Никнейм\" name=\"new nickname\" onChange={(e) => setUsername(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"Пароль\" name=\"new password\" onChange={(e) => setPassword(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"SO2 никнейм\" onChange={(e) => setSo2_nickname(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"SO2 id\" onChange={(e) => setSo2_id(e.target.value)} />\r\n\r\n\t\t\t\t<p className=\"err\">{err}</p>\r\n\t\t\t\t<button className={`signup ${isAuthtorizing}`} onClick={() => signUp()}>\r\n\t\t\t\t\tЗарегистрироваться\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={`signin ${isAuthtorizing}`} onClick={() => setIsLogin(true)}>\r\n\t\t\t\t\tУже есть аккаунт\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useContext } from 'react';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport { Route } from 'react-router';\r\nimport Auth from '../../views/Auth/Auth';\r\n\r\nexport default function PrivateRoute({ path, setSocket, children, ...rest }) {\r\n\tconst { socket } = useContext(SocketContext);\r\n\t\r\n\tif (!socket) {\r\n\t\treturn <Auth setSocket={setSocket} />;\r\n\t} else {\r\n\t\treturn (\r\n\t\t<Route path={path} {...rest} >\r\n\t\t\t{children}\r\n\t\t</Route>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport './PreLoader.scss';\r\n\r\nexport default function PreLoader() {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"dot first\"></div>\r\n            <div className=\"dot second\"></div>\r\n            <div className=\"dot last\"></div>\r\n        </div>\r\n    )\r\n}","export const frontAuthUrl = '/auth'","const { default: baseUrl } = require(\"./baseUrl\");\r\n\r\nexport const profileUrl = baseUrl + '/api/user';\r\nexport const profileByIdUrl = baseUrl + '/api/user/';\r\n","import { profileUrl } from '../../urls/profileUrls';\r\nimport JwtErrorService from '../JwtErrorService/JwtErrorService';\r\nimport FetchService from '../FetchService/FetchService';\r\n\r\nexport default class ProfileService {\r\n\tstatic async GetOwnProfie() {\r\n\t\tconst res = await FetchService.get(profileUrl);\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'get profile');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn body;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async GetProfileByUsername(username) {\r\n\t\tconst res = await FetchService.get(profileUrl, {\r\n\t\t\tusername: username,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body, 'get profile by username');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconst result = await JwtErrorService.refreshByErr(body.err);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.GetProfileByUsername(username);\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn body.user;\r\n\t\t}\r\n\t}\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProfileService from '../../services/ProfileService/ProfileService';\r\n\r\nimport './ProfileData.scss';\r\n\r\nexport default function ProfileData() {\r\n\tconst [profile, setProfile] = useState({\r\n\t\tusername: '',\r\n\t\trating: 0,\r\n\t\tbio: ''\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tProfileService.GetOwnProfie().then((profile) => {\r\n\t\t\tif (profile) {\r\n\t\t\t\tsetProfile(profile);\r\n\t\t\t} else {\r\n\t\t\t\t// window.location.href = '/auth';\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"userData\">\r\n\t\t\t<div className=\"avatar\"></div>\r\n\t\t\t<div className=\"textData\">\r\n\t\t\t\t<div className=\"username\">{profile.username}</div>\r\n\t\t\t\t<div className=\"rating\">{profile.rating}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bio\">\r\n\t\t\t\t{profile.bio}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import baseUrl from \"./baseUrl\";\r\n\r\nexport const inviteToPartyUrl = baseUrl + '/api/party/invite';\r\nexport const acceptInviteUrl = baseUrl + '/api/party/join';\r\nexport const rejectInviteUrl = baseUrl + '/api/party/reject'\r\nexport const leavePartyUrl = baseUrl + '/api/party/leave';\r\nexport const getPartyUrl = baseUrl + '/api/party/';\r\nexport const kickFromPartyUrl = baseUrl + '/api/party/kick'\r\n","import {\r\n\tinviteToPartyUrl,\r\n\tacceptInviteUrl,\r\n\tleavePartyUrl,\r\n\tgetPartyUrl,\r\n\trejectInviteUrl,\r\n\tkickFromPartyUrl,\r\n} from '../../urls/partyUrls';\r\nimport TokenService from '../TokenService/TokenService';\r\nimport FetchService from '../FetchService/FetchService';\r\n\r\nexport default class PartyService {\r\n\tstatic async sendInvite(username) {\r\n\t\tconst res = await FetchService.post(inviteToPartyUrl, {\r\n\t\t\tusername: username,\r\n\t\t});\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'send invite');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async acceptInvite(id) {\r\n\t\tconsole.log(id);\r\n\t\tconst res = await FetchService.post(acceptInviteUrl, {\r\n\t\t\tid: id,\r\n\t\t});\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'accept invite');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async rejectInvite(id) {\r\n\t\tconsole.log(id);\r\n\r\n\t\tconst res = await FetchService.post(rejectInviteUrl, {\r\n\t\t\tid: id,\r\n\t\t});\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'reject invite');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async leaveParty() {\r\n\t\tconst res = await FetchService.post(leavePartyUrl);\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'leave party');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async kick(username) {\r\n\t\tconst res = await FetchService.post(kickFromPartyUrl, {\r\n\t\t\tusername: username,\r\n\t\t});\r\n\t\tconsole.log(res.body);\r\n\r\n\t\tif (res.body.err) {\r\n\t\t\tconsole.error(res.body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn res.body;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async getParty() {\r\n\t\tconst res = await fetch(getPartyUrl, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + TokenService.getAccessToken(),\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\tconst body = await res.json();\r\n\t\tconsole.log(body, 'gett party');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t} else {\r\n\t\t\treturn body.data;\r\n\t\t}\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport './btns.scss'\r\n\r\nexport function CancelBtn({ children, ...rest }) {\r\n\treturn (\r\n\t\t<button className=\"btns cancel\" {...rest}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport function SubmitBtn({ children, ...rest }) {\r\n\treturn (\r\n\t\t<button className=\"btns submit\" {...rest}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport function DeleteBtn({...rest}) {\r\n\treturn (\r\n\t\t<button className=\"deleteBtn\" {...rest}>X</button>\r\n\t)\r\n}","import React from 'react';\r\nimport './Overlay.scss';\r\n\r\nexport default function Overlay({ show, children }) {\r\n    return (\r\n        <div className={\"overlay \" + show}>{children}</div>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport './Party.scss';\r\nimport PartyService from '../../services/PartyService/PartyService';\r\nimport { CancelBtn, SubmitBtn, DeleteBtn } from '../btns/btns';\r\nimport Overlay from '../Overlay/Overlay';\r\nimport ProfileService from '../../services/ProfileService/ProfileService';\r\n\r\nexport default function Party() {\r\n\tconst { socket } = useContext(SocketContext);\r\n\tconst [party, setParty] = useState({\r\n\t\tplayers: [],\r\n\t\towner: ''\r\n\t});\r\n\tconst [user, setUser] = useState({\r\n\t\tid: '',\r\n\t\tusername: '',\r\n\t});\r\n\tconst [target, setTarget] = useState('');\r\n\tconst [showOverlay, setShowOverlay] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('party', (party) => {\r\n\t\t\tconsole.log(party, 'socket party');\r\n\t\t\tsetParty(party.data);\r\n\t\t});\r\n\r\n\t\tPartyService.getParty().then((party) => {\r\n\t\t\tconsole.log(party, 'fetch party');\r\n\t\t\tsetParty(party);\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tsocket.off('party');\r\n\t\t};\r\n\t}, [socket]);\r\n\r\n\tuseEffect(() => {\r\n\t\tProfileService.GetOwnProfie().then((profile) => {\r\n\t\t\tif (profile) {\r\n\t\t\t\tsetUser(profile);\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\tfunction sendInvte() {\r\n\t\tsetShowOverlay(false);\r\n\t\tconsole.log(target);\r\n\t\tPartyService.sendInvite(target);\r\n\t\tsetTarget('');\r\n\t}\r\n\r\n\tfunction leave() {\r\n\t\tPartyService.leaveParty();\r\n\t}\r\n\r\n\tfunction kick(username) {\r\n\t\tPartyService.kick(username);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"party\">\r\n\t\t\t<Overlay show={showOverlay}>\r\n\t\t\t\t<div className=\"invite\">\r\n\t\t\t\t\t<input type=\"target\" onChange={(e) => setTarget(e.target.value)} value={target} />\r\n\t\t\t\t\t<div className=\"controls\">\r\n\t\t\t\t\t\t<CancelBtn onClick={() => setShowOverlay(false)}>Отмена</CancelBtn>\r\n\t\t\t\t\t\t<SubmitBtn onClick={() => sendInvte()}>Отправить</SubmitBtn>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Overlay>\r\n\r\n\t\t\t{party.players.map((player) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={player.username} className=\"member\">\r\n\t\t\t\t\t\t{player.username}\r\n\t\t\t\t\t\t{user.id === party.owner && user.username !== player.username ? (\r\n\t\t\t\t\t\t\t<DeleteBtn onClick={() => kick(player.username)} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tparty.owner === player.id ?\r\n\t\t\t\t\t\t\t\t<div className=\"crown\"></div>\r\n\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{party.players.length !== 5 ? (\r\n\t\t\t\t<div className=\"addMember member\" onClick={() => setShowOverlay(true)}>\r\n\t\t\t\t\tПригласить игрока\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t\t{party.players.length !== 1 ? (\r\n\t\t\t\t<div className=\"cancel member\" onClick={() => leave()}>\r\n\t\t\t\t\tВыйти\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","const { default: baseUrl } = require(\"./baseUrl\");\r\n\r\nexport const joinQueueUrl = baseUrl + '/api/queue/join';\r\nexport const leaveQueueUrl = baseUrl + '/api/queue/leave';\r\n\r\n","import { joinQueueUrl, leaveQueueUrl } from \"../../urls/queueUrls\";\r\nimport TokenService from \"../TokenService/TokenService\";\r\nimport FetchService from \"../FetchService/FetchService\";\r\n\r\nclass QueueService {\r\n    static async JoinQueue() {\r\n        const res = await FetchService.get(joinQueueUrl);\r\n\r\n        const body = await res.body;\r\n        console.log(body, 'join queue');\r\n\r\n        if (body.err) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    static async LeaveQueue() {\r\n        const res = await FetchService.get(leaveQueueUrl);\r\n        \r\n        const body = await res.body;\r\n        console.log(body, 'leave queue');\r\n\r\n        if (body.err) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport default QueueService;","import React, { useContext, useState, useEffect } from 'react';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport './Search.scss';\r\nimport QueueService from '../../services/QueueService/QueueService';\r\nimport PartyService from '../../services/PartyService/PartyService';\r\n\r\nconst partyStatuses = {\r\n\t'WAIT': 0,\r\n\t'QUEUE': 1,\r\n\t'IN_GAME': 2\r\n}\r\n\r\n\r\nexport default function Search() {\r\n\tconst { socket } = useContext(SocketContext);\r\n\tconst [isInSearch, setIsInSearch] = useState(false);\r\n\tconst [shake, setShake] = useState('');\r\n\r\n\tfunction joinQueue() {\r\n\t\tif (isInSearch) {\r\n\t\t\tQueueService.LeaveQueue().then((result) => (result ? setIsInSearch(false) : shakeAnime()));\r\n\t\t} else {\r\n\t\t\tQueueService.JoinQueue().then((result) => (result ? setIsInSearch(true) : shakeAnime()));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction shakeAnime() {\r\n\r\n\t\tsetShake('shake');\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetShake('');\r\n\t\t}, 500);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tPartyService.getParty().then((party) => {\r\n\t\t\tif (party.status === partyStatuses.QUEUE) {\r\n\t\t\t\tsetIsInSearch(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetIsInSearch(false);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsocket.on('queue', (context) => {\r\n\t\t\tconsole.log(context, 'search');\r\n\t\t\tif (context.data) {\r\n\t\t\t\tsetIsInSearch(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetIsInSearch(false);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsocket.off('queue');\r\n\t\t};\r\n\t}, [socket]);\r\n\r\n\treturn (\r\n\t\t<div className=\"search\">\r\n\t\t\t<button className={(isInSearch ? 'red ' : ' ') + shake} onClick={() => joinQueue()}>\r\n\t\t\t\t{isInSearch ? 'Отмена' : 'Искать'}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport './MathcMaking.scss';\r\nimport ProfileData from '../../components/ProfileData/ProfileData';\r\nimport Party from '../../components/Party/Party';\r\nimport Search from '../../components/Search/Search';\r\n\r\nexport default function MatchMaking() {\r\n\treturn (\r\n        <div className=\"matchMaking\">\r\n           \r\n            <ProfileData />\r\n            <Search />\r\n            <Party />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport './Navbar.scss';\r\nimport {  useLocation } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 } from 'uuid';\r\n\r\n\r\nconst routes = [\r\n    {\r\n        url: '/',\r\n        name: 'MM'\r\n    },\r\n    {\r\n        url: '/friends',\r\n        name: 'Friends'\r\n    },\r\n    {\r\n        url: '/notifications',\r\n        name: 'nots'\r\n    }\r\n]\r\n\r\nexport default function Navbar() {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            {\r\n                routes.map(route => {\r\n                    return (\r\n                        <Link\r\n                            className={location.pathname === route.url ? \"navLink active\" : 'navLink'}\r\n                            to={route.url}\r\n                            key={v4()}\r\n                            >\r\n                            {route.name}\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import FetchService from '../FetchService/FetchService';\r\n\r\nconst { addFriendUrl, removeFriendUrl, friendListUrl } = require('../../urls/friendsUrls');\r\nconst { default: JwtErrorService } = require('../JwtErrorService/JwtErrorService');\r\n\r\nclass FriendsService {\r\n\tstatic async addFriend(friendName) {\r\n\t\tconst res = await FetchService.post(addFriendUrl, {\r\n\t\t\tusername: friendName,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body, 'add friend');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconst result = await JwtErrorService.refreshByErr(body.err);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.addFriend(friendName);\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async removeFriend(friendId) {\r\n\t\tconst res = await FetchService.post(removeFriendUrl, {\r\n\t\t\tid: friendId,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body, 'remove friend');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async getFriends() {\r\n\t\tconst res = await FetchService.get(friendListUrl);\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body, 'get friends');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn body;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default FriendsService;\r\n","import React from 'react';\r\n\r\nimport './Friend.scss';\r\nimport { SubmitBtn, DeleteBtn } from '../btns/btns';\r\nimport PartyService from '../../services/PartyService/PartyService';\r\nimport FriendsService from '../../services/FriendsService/FriendsService';\r\n\r\nexport default function Friend({data, destroy = () => {}}) {\r\n\r\n    function RemoveFriend() {\r\n        FriendsService.removeFriend(data.id)\r\n        destroy();\r\n    }\r\n\r\n    function InviteToParty() {\r\n        PartyService.sendInvite(data.username);\r\n    }\r\n\r\n    return (\r\n        <div className=\"friend\">\r\n            <div className=\"data\">\r\n                <div className=\"username\">{data.username}</div>\r\n            </div>\r\n            <div className=\"controls\">\r\n                <SubmitBtn onClick={() => InviteToParty()}>Пригласить</SubmitBtn>\r\n                <DeleteBtn onClick={() => RemoveFriend()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport FriendsService from '../../services/FriendsService/FriendsService';\r\nimport { SubmitBtn, CancelBtn } from '../../components/btns/btns';\r\nimport Overlay from '../../components/Overlay/Overlay';\r\n\r\nimport './Friends.scss'\r\nimport Friend from '../../components/Friend/Friend';\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([]);\r\n    const [target, setTarget] = useState('');\r\n\r\n    const [showOverlay, setShowOverlay] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        FriendsService.getFriends().then(friends => {\r\n            if (friends) {\r\n                console.log(friends[0])\r\n                setFriends(friends);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function sendReq() {\r\n        setShowOverlay(false);\r\n        FriendsService.addFriend(target);\r\n        setTarget('');\r\n    }\r\n\r\n    function destroy(index) {\r\n        setFriends(prevState => {\r\n            const friends = [...prevState];\r\n            friends.splice(index);\r\n            return friends;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"friends\">\r\n            <div className=\"controls\">\r\n                <SubmitBtn onClick={() => setShowOverlay(true)}>Добавить</SubmitBtn>\r\n            </div>\r\n            <Overlay show={showOverlay}>\r\n                <div className=\"addFriend\">\r\n                    <input type=\"target\" onChange={(e) => setTarget(e.target.value)} value={target} />\r\n                    <div className=\"controls\">\r\n                        <CancelBtn onClick={() => setShowOverlay(false)}>Отмена</CancelBtn>\r\n                        <SubmitBtn onClick={() => sendReq()}>Отправить</SubmitBtn>\r\n                    </div>\r\n                </div>\r\n            </Overlay>\r\n            {friends.map((friend, index) => {\r\n                return (\r\n                    <Friend key={friend.username} data={friend} destroy={() => destroy(index)}/>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n} ","import React, { useState } from 'react';\r\nimport { CancelBtn, SubmitBtn } from '../btns/btns';\r\nimport PartyService from '../../services/PartyService/PartyService';\r\n\r\nimport './Invite.scss'\r\n\r\nexport default function Invite({ id, from,  destroy }) {\r\n\tconst [isRemoving, setIsRemoving] = useState('')\r\n\r\n\tfunction cancel(id) {\r\n\t\tsetIsRemoving('remove')\r\n\t\tsetTimeout(() => {\r\n\t\t\tdestroy();\r\n\t\t}, 340)\r\n\t\tPartyService.rejectInvite(id);\r\n\t}\r\n\r\n\tfunction accept(id) {\r\n\t\tsetIsRemoving('remove')\r\n\t\tsetTimeout(() => {\r\n\t\t\tdestroy();\r\n\t\t}, 340)\r\n\t\tPartyService.acceptInvite(id);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={\"notification invite \" + isRemoving}>\r\n\t\t\t<p>Инвайт от {from}</p>\r\n\t\t\t<div className=\"controls\">\r\n\t\t\t\t<CancelBtn onClick={() => cancel(id)}>Отмена</CancelBtn>\r\n\t\t\t\t<SubmitBtn onClick={() => accept(id)}>Принять</SubmitBtn>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { CancelBtn, SubmitBtn } from '../btns/btns';\r\nimport FriendsService from '../../services/FriendsService/FriendsService';\r\n\r\nexport default function FriendReq({ from, destroy }) {\r\n\tconst [removing, setRemoving] = useState('');\r\n\r\n\tfunction cancel(username) {\r\n\t\tsetRemoving('remove')\r\n\t\tsetTimeout(() => {\r\n\t\t\tdestroy()\r\n\t\t}, 340)\r\n\t}\r\n\r\n\tfunction accept(username) {\r\n\t\tsetRemoving('remove')\r\n\t\tsetTimeout(() => {\r\n\t\t\tdestroy()\r\n\t\t}, 340)\r\n        FriendsService.addFriend(username)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={\"notification invite \" + removing}>\r\n\t\t\t<p>Приглашение в друзья от {from.username}</p>\r\n\t\t\t<div className=\"controls\">\r\n\t\t\t\t<CancelBtn onClick={() => cancel(from.username)}>Отмена</CancelBtn>\r\n\t\t\t\t<SubmitBtn onClick={() => accept(from.username)}>Принять</SubmitBtn>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport Invite from '../Invite/Invite';\r\nimport FriendReq from '../FriendReq/FriendReq';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport './Notifications.scss';\r\n\r\nexport default function Notifications() {\r\n\tconst { socket } = useContext(SocketContext);\r\n\tconst [notifications, setNotifications] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst destroy = (index) => {\r\n\t\t\tsetNotifications((prevState) => {\r\n\t\t\t\tconst nots = [...prevState];\r\n\t\t\t\tnots.splice(index, 1);\r\n\t\t\t\treturn nots;\r\n\t\t\t});\r\n\t\t};\r\n\t\tif (socket) {\r\n\t\t\tsocket.on('notification', (notification) => {\r\n\t\t\t\tconsole.log(notification);\r\n\t\t\t\tswitch (notification.type) {\r\n\t\t\t\t\tcase 'party/invite':\r\n\t\t\t\t\t\tsetNotifications((notifications) => {\r\n\t\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t\t...notifications,\r\n\t\t\t\t\t\t\t\t<Invite\r\n\t\t\t\t\t\t\t\t\tid={notification.data.id}\r\n\t\t\t\t\t\t\t\t\tfrom={notification.data.players[0].username}\r\n\t\t\t\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\t\t\t\tdestroy={() => destroy(notifications.length)}\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'friends/add':\r\n\t\t\t\t\t\tsetNotifications((notifications) => {\r\n\t\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t\t...notifications,\r\n\t\t\t\t\t\t\t\t<FriendReq\r\n\t\t\t\t\t\t\t\t\tfrom={notification.data}\r\n\t\t\t\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\t\t\t\tdestroy={() => destroy(notifications.length)}\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tif (socket) {\r\n\t\t\t\tsocket.off('notification');\r\n\t\t\t}\r\n\t\t};\r\n\t}, [socket]);\r\n\r\n\treturn <div className=\"notifications\">{notifications}</div>;\r\n}\r\n","import baseUrl from \"./baseUrl\";\r\n\r\nexport const getNotsUrl = baseUrl + '/api/notifications';","import { getNotsUrl } from '../../urls/notificationsUrls';\r\nimport FetchService from '../FetchService/FetchService';\r\n\r\nexport default class NotificationsService {\r\n\tstatic async get() {\r\n\t\tconst res = await FetchService.get(getNotsUrl);\r\n        \r\n        const body = await res.body;\r\n        console.log(body, 'get notifications')\r\n\r\n        if (body.err) {\r\n            console.error(body.err)\r\n            return false;\r\n        } else {\r\n            return body;\r\n        }\r\n\t}\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport NotificationsService from '../../services/NotificationsService/NotificationsService';\r\nimport FriendReq from '../../components/FriendReq/FriendReq';\r\nimport Invite from '../../components/Invite/Invite';\r\n\r\nimport './notificationsView.scss'\r\n\r\nexport default function NotificationsView() {\r\n    const [nots, setNots] = useState({\r\n        party: [],\r\n        friends: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        NotificationsService.get().then((nots) => {\r\n            if (nots) {\r\n                setNots(nots);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function destroyFriendReq(index) {\r\n        setNots(prevState => {\r\n            const nots = {\r\n                ...prevState\r\n            };\r\n            nots.friends.splice(index, 1);\r\n            return nots;\r\n        })\r\n    }\r\n\r\n    function destroyPartyReq(index) {\r\n        setNots(prevState => {\r\n            const nots = {\r\n                ...prevState\r\n            };\r\n            nots.party.splice(index, 1);\r\n            return nots;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"notificationsView\">\r\n            {\r\n                nots.friends.map((friend, index) => {\r\n                    return (\r\n                        <FriendReq from={friend.username} destroy={() => destroyFriendReq(index)}/>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                nots.party.map((party, index) => {\r\n                    return (\r\n                        <Invite from={party.players[0].username} id={party.id} destroy={() => destroyPartyReq(index)}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\nimport SocketContext from './context/SocketContext';\r\nimport AuthService from './services/AuthService/AuthService';\r\nimport TokenService from './services/TokenService/TokenService';\r\nimport PreLoader from './components/PreLoader/PreLoader';\r\nimport { Switch, Route } from 'react-router';\r\nimport Auth from './views/Auth/Auth';\r\nimport { frontAuthUrl } from './frontUrls/frontAuthUrl';\r\nimport MatchMaking from './views/MathMaking/MatchMaking';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Friends from './views/Friends/Friends';\r\nimport Notifications from './components/Notifications/Notifications';\r\nimport NotificationsView from './views/NotificationsView/NotificationsView';\r\n\r\nfunction App() {\r\n\tconst [socket, setSocket] = useState(null);\r\n\tconst [showPreloader, setShowPreloader] = useState(true);\r\n\t//#region auth\r\n\tuseEffect(() => {\r\n\t\tif (TokenService.getAccessToken()) {\r\n\t\t\tAuthService.authorize().then((socket) => {\r\n\t\t\t\tsocket.on('connect', () => console.log('connected'));\r\n\r\n\t\t\t\tsocket.on('disconnect', () => {\r\n\t\t\t\t\tconsole.log('disconnected');\r\n\t\t\t\t\tsetShowPreloader(false);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsocket.on('auth', () => {\r\n\t\t\t\t\tconsole.log('authed');\r\n\t\t\t\t\tsetSocket(socket);\r\n\t\t\t\t\tsetShowPreloader(false);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsocket.on('unauth', () => {\r\n\t\t\t\t\tconsole.log('unauth');\r\n\t\t\t\t\tsetShowPreloader(false);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetShowPreloader(false);\r\n\t\t}\r\n\t}, []);\r\n\t//#endregion\r\n\r\n\tif (showPreloader) {\r\n\t\treturn <PreLoader />;\r\n\t} else if (socket) {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<SocketContext.Provider value={{ socket: socket }}>\r\n\t\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t\t<Notifications />\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/\" setSocket={setSocket} exact>\r\n\t\t\t\t\t\t\t\t<MatchMaking />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/friends\" setSocket={setSocket} exact>\r\n\t\t\t\t\t\t\t\t<Friends />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/notifications\" setSocket={setSocket} exact>\r\n\t\t\t\t\t\t\t\t<NotificationsView />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<Route path={frontAuthUrl}>\r\n\t\t\t\t\t\t\t\t<Auth setSocket={setSocket} />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t</BrowserRouter>\r\n\t\t\t\t</SocketContext.Provider>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\tconsole.log('not auhed');\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Auth setSocket={setSocket} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import baseUrl from \"./baseUrl\";\r\n\r\nexport const signupUrl = baseUrl + '/api/auth/signup';\r\n\r\nexport const signinUrl = baseUrl + '/api/auth/signin';\r\n\r\nexport const authorizeUrl = baseUrl + '/api/auth/authorize';\r\n\r\nexport const refreshUrl = baseUrl + '/api/auth/refresh';","import { signupUrl, signinUrl, refreshUrl } from '../../urls/authUrls';\r\nimport io from 'socket.io-client';\r\nimport socketUrl from '../../urls/socketUrl';\r\nimport TokenService from '../TokenService/TokenService';\r\nimport FetchService from '../FetchService/FetchService';\r\n\r\nclass AuthService {\r\n\tstatic async singup(username, password, email, so2_nickname, so2_id) {\r\n\t\tconst res = await FetchService.post(signupUrl, {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password,\r\n\t\t\temail: email,\r\n\t\t\tso2_nickname: so2_nickname,\r\n\t\t\tso2_id: so2_id,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body);\r\n\r\n\t\tif (body.err) {\r\n\t\t\treturn {\r\n\t\t\t\terr: body.err,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tconsole.log(body.access_token);\r\n\t\t\tTokenService.setAccessToken(body.access_token);\r\n\t\t\treturn {\r\n\t\t\t\trefreshToken: body.refresh_token,\r\n\t\t\t\taccess_token: body.access_token,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async signin(username, password) {\r\n\t\tconst res = await FetchService.post(signinUrl, {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body);\r\n\r\n\t\tif (body.err) {\r\n\t\t\treturn {\r\n\t\t\t\terr: body.err,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tTokenService.setAccessToken(body.access_token);\r\n\r\n\t\t\treturn {\r\n\t\t\t\trefreshToken: body.refreshToken,\r\n\t\t\t\taccessToken: body.access_token,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async authorize() {\r\n\t\tconst socket = io.connect(socketUrl, {\r\n\t\t\tquery: {\r\n\t\t\t\ttoken: TokenService.getAccessToken(),\r\n\t\t\t},\r\n\t\t\tsecure: true,\r\n\t\t});\r\n\r\n\t\treturn socket;\r\n\t}\r\n\r\n\tstatic async refreshAccessToken(refreshToken) {\r\n\t\tconst res = await FetchService.post(refreshUrl, {\r\n\t\t\trefresh_token: refreshToken,\r\n\t\t});\r\n\t\tconst body = await res.body;\r\n\r\n\t\tif (body.err) {\r\n\t\t\treturn {\r\n\t\t\t\terr: body.err,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\taccess_token: body.access_token,\r\n\t\t\t\trefresh_token: body.refresh_token,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AuthService;\r\n","const socketUrl = 'https://totalifydev.tk';\r\n\r\nexport default socketUrl;","const { default: AauthService } = require('../AuthService/AuthService');\r\nconst { default: TokenService } = require('../TokenService/TokenService');\r\n\r\nclass JwtErrorService {\r\n\r\n\tstatic async refreshByErr(err) {\r\n\t\tif (err.name === 'jwt expired') {\r\n            const result = await AauthService.refreshAccessToken(TokenService.getRefreshToken());\r\n            if (result.err) {\r\n                TokenService.clear();\r\n                return false\r\n            } else {\r\n                TokenService.setAccessToken(result.access_token);\r\n                return result.access_token\r\n            }\r\n\t\t} else {\r\n            return false\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default JwtErrorService;\r\n","import TokenService from '../TokenService/TokenService';\r\nimport querystring from 'querystring';\r\n\r\nexport default class FetchService {\r\n\t/**\r\n\t * @param {String} url\r\n\t * @param {*} params\r\n\t * @param {*} headers\r\n\t */\r\n\tstatic async get(url, params = {}, headers = {}) {\r\n\t\tlet paramsStringified = '?';\r\n\r\n\t\tparamsStringified += querystring.stringify(params);\r\n\r\n\t\tconst res = await fetch(url + paramsStringified, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + TokenService.getAccessToken(),\r\n\t\t\t\tcreditionals: 'include',\r\n\t\t\t\t...headers,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t...res,\r\n\t\t\tbody: await res.json(),\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param {String} url\r\n\t * @param {*} body\r\n\t * @param {*} params\r\n\t * @param {*} headers\r\n\t */\r\n\tstatic async post(url, body = {}, params = {}, headers = {}) {\r\n\t\tconst res = await fetch(url + `?${querystring.stringify(params)}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + TokenService.getAccessToken(),\r\n\t\t\t\tcreditionals: 'include',\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\t...headers,\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(body),\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t...res,\r\n\t\t\tbody: await res.json(),\r\n\t\t};\r\n\t}\r\n}\r\n","const baseUrl = 'https://totalifydev.tk';\r\n\r\nexport default baseUrl;"],"sourceRoot":""}