{"version":3,"sources":["services/FetchService/FetchService.js","urls/baseUrl.js","services/TokenService/TokenService.js","urls/authUrls.js","services/AuthService/AuthService.js","urls/socketUrl.js","services/JwtErrorService/JwtErrorService.js","components/Voting/map1.png","components/Voting/map2.png","components/Voting/map3.png","urls/friendsUrls.js","context/SocketContext.js","components/AuthInput/AuthInput.js","views/Auth/Auth.js","components/PrivateRoute/PrivateRoute.js","components/PreLoader/PreLoader.js","frontUrls/frontAuthUrl.js","urls/profileUrls.js","services/ProfileService/ProfileService.js","components/ProfileData/ProfileData.js","urls/partyUrls.js","services/PartyService/PartyService.js","components/btns/btns.js","components/Overlay/Overlay.js","components/Party/Party.js","urls/queueUrls.js","services/QueueService/QueueService.js","components/Search/Search.js","views/MathMaking/MatchMaking.js","hooks/useService.js","components/Navbar/Navbar.js","services/FriendsService/FriendsService.js","components/Friend/Friend.js","views/Friends/Friends.js","components/Invite/Invite.js","components/FriendReq/FriendReq.js","components/Notifications/Notifications.js","urls/notificationsUrls.js","services/NotificationsService/NotificationsService.js","views/NotificationsView/NotificationsView.js","components/Redirects/Redirects.js","urls/gameUrls.js","services/GameService/GameService.js","components/Voting/Voting.js","components/Chat/Chat.js","components/Teams/Teams.js","views/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["FetchService","url","params","headers","paramsStringified","querystring","stringify","fetch","method","Authorization","TokenService","getAccessToken","creditionals","res","json","body","JSON","baseUrl","localStorage","getItem","token","setItem","clear","signupUrl","signinUrl","refreshUrl","AuthService","username","password","email","so2_nickname","so2_id","post","console","log","err","access_token","setAccessToken","refreshToken","refresh_token","accessToken","socket","io","connect","socketUrl","query","secure","AauthService","require","default","JwtErrorService","name","refreshAccessToken","getRefreshToken","result","module","exports","friendListUrl","addFriendUrl","removeFriendUrl","SocketContext","createContext","AuthInput","placeHodler","rest","type","className","placeholder","Auth","setSocket","useState","isLogin","setIsLogin","setEmail","setPassword","setUsername","setSo2_id","setSo2_nickname","setErr","isAuthtorizing","setIsAuthtorizing","a","length","singup","authorize","then","signin","signinResult","onChange","e","target","value","onClick","signIn","signUp","PrivateRoute","path","children","useContext","PreLoader","profileUrl","ProfileService","get","error","refreshByErr","this","GetProfileByUsername","user","ProfileData","profileData","rating","bio","profile","setProfile","useEffect","GetOwnProfie","inviteToPartyUrl","acceptInviteUrl","rejectInviteUrl","leavePartyUrl","getPartyUrl","kickFromPartyUrl","PartyService","id","data","CancelBtn","SubmitBtn","DeleteBtn","Overlay","show","Party","partyData","players","owner","party","setParty","setUser","setTarget","showOverlay","setShowOverlay","on","getParty","off","sort","b","sendInvite","map","player","key","kick","leaveParty","joinQueueUrl","leaveQueueUrl","QueueService","partyStatuses","Search","isInSearch","setIsInSearch","shake","setShake","shakeAnime","setTimeout","context","status","LeaveQueue","JoinQueue","MatchMaking","isLoading","setIsLoading","request","useCallback","serviceFunc","needLoading","useService","paryData","routes","Navbar","location","useLocation","route","pathname","to","v4","FriendsService","friendName","addFriend","friendId","Friend","destroy","removeFriend","Friends","friends","setFriends","getFriends","friend","index","prevState","splice","Invite","from","isRemoving","setIsRemoving","rejectInvite","cancel","acceptInvite","accept","FriendReq","removing","setRemoving","Notifications","notifications","setNotifications","nots","notification","find","uuid","getNotsUrl","NotificationsService","NotificationsView","setNots","destroyFriendReq","x","destroyPartyReq","Redirects","redirect","setRedirect","gameVoteUrl","gameUrl","chatMsgs","GameService","maps","map1","map2","map3","Voting","game","votes","setVotes","Date","getTime","lastFetch","setLastFetch","timer","setTimer","interval","setInterval","newTime","voteStartAt","Math","round","clearInterval","mapVotes","filter","vote","userVote","state","isVoted","userId","style","backgroundImage","Chat","setShow","inpRef","useRef","messagesEndRef","msg","setMsg","msgs","setMsgs","scrollToBottom","current","scrollIntoView","behavior","sendMsg","emit","content","textContent","push","getGameMsgs","author","ref","contentEditable","role","onInput","currentTarget","onKeyDown","keyCode","Teams","team1","gamesInfo","SO2","nickname","team2","statuses","Game","setGame","showChat","setShowChat","GetGame","App","showPreloader","setShowPreloader","Provider","exact","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.91333ae9.chunk.js","sourcesContent":["import TokenService from '../TokenService/TokenService';\r\nimport querystring from 'querystring';\r\n\r\nexport default class FetchService {\r\n\t/**\r\n\t * @param {String} url\r\n\t * @param {*} params\r\n\t * @param {*} headers\r\n\t */\r\n\tstatic async get(url, params = {}, headers = {}) {\r\n\t\tlet paramsStringified = '?';\r\n\r\n\t\tparamsStringified += querystring.stringify(params);\r\n\r\n\t\tconst res = await fetch(url + paramsStringified, {\r\n\t\t\tmethod: 'GET',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + TokenService.getAccessToken(),\r\n\t\t\t\tcreditionals: 'include',\r\n\t\t\t\t...headers,\r\n\t\t\t},\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t...res,\r\n\t\t\tbody: await res.json(),\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param {String} url\r\n\t * @param {*} body\r\n\t * @param {*} params\r\n\t * @param {*} headers\r\n\t */\r\n\tstatic async post(url, body = {}, params = {}, headers = {}) {\r\n\t\tconst res = await fetch(url + `?${querystring.stringify(params)}`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: 'Bearer ' + TokenService.getAccessToken(),\r\n\t\t\t\t'Content-type': 'application/json',\r\n\t\t\t\t...headers,\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(body),\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\t...res,\r\n\t\t\tbody: await res.json(),\r\n\t\t};\r\n\t}\r\n}\r\n","const baseUrl = 'https://totalifydev.tk';\r\n\r\nexport default baseUrl;","class TokenService {\r\n    static getRefreshToken() {\r\n        return localStorage.getItem('refreshToken')\r\n    }\r\n\r\n    static getAccessToken() {\r\n        return localStorage.getItem('accessToken')\r\n    }\r\n\r\n    static setRefreshToken(token) {\r\n        return localStorage.setItem('refreshToken', token);\r\n    }\r\n\r\n    static setAccessToken(token) {\r\n        return localStorage.setItem('accessToken', token);\r\n    }\r\n\r\n    static clear() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nexport default TokenService;","import baseUrl from \"./baseUrl\";\r\n\r\nexport const signupUrl = baseUrl + '/api/auth/signup';\r\n\r\nexport const signinUrl = baseUrl + '/api/auth/signin';\r\n\r\nexport const authorizeUrl = baseUrl + '/api/auth/authorize';\r\n\r\nexport const refreshUrl = baseUrl + '/api/auth/refresh';","import { signupUrl, signinUrl, refreshUrl } from '../../urls/authUrls';\r\nimport io from 'socket.io-client';\r\nimport socketUrl from '../../urls/socketUrl';\r\nimport TokenService from '../TokenService/TokenService';\r\nimport FetchService from '../FetchService/FetchService';\r\n\r\nclass AuthService {\r\n\tstatic async singup(username, password, email, so2_nickname, so2_id) {\r\n\t\tconst res = await FetchService.post(signupUrl, {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password,\r\n\t\t\temail: email,\r\n\t\t\tso2_nickname: so2_nickname,\r\n\t\t\tso2_id: so2_id,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body);\r\n\r\n\t\tif (body.err) {\r\n\t\t\treturn {\r\n\t\t\t\terr: body.err,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tconsole.log(body.access_token);\r\n\t\t\tTokenService.setAccessToken(body.access_token);\r\n\t\t\treturn {\r\n\t\t\t\trefreshToken: body.refresh_token,\r\n\t\t\t\taccess_token: body.access_token,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async signin(username, password) {\r\n\t\tconst res = await FetchService.post(signinUrl, {\r\n\t\t\tusername: username,\r\n\t\t\tpassword: password,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body);\r\n\r\n\t\tif (body.err) {\r\n\t\t\treturn {\r\n\t\t\t\terr: body.err,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tTokenService.setAccessToken(body.access_token);\r\n\r\n\t\t\treturn {\r\n\t\t\t\trefreshToken: body.refreshToken,\r\n\t\t\t\taccessToken: body.access_token,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async authorize() {\r\n\t\tconst socket = io.connect(socketUrl, {\r\n\t\t\tquery: {\r\n\t\t\t\ttoken: TokenService.getAccessToken(),\r\n\t\t\t},\r\n\t\t\tsecure: true,\r\n\t\t});\r\n\r\n\t\treturn socket;\r\n\t}\r\n\r\n\tstatic async refreshAccessToken(refreshToken) {\r\n\t\tconst res = await FetchService.post(refreshUrl, {\r\n\t\t\trefresh_token: refreshToken,\r\n\t\t});\r\n\t\tconst body = await res.body;\r\n\r\n\t\tif (body.err) {\r\n\t\t\treturn {\r\n\t\t\t\terr: body.err,\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\taccess_token: body.access_token,\r\n\t\t\t\trefresh_token: body.refresh_token,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default AuthService;\r\n","const socketUrl = 'https://totalifydev.tk';\r\n\r\nexport default socketUrl;","const { default: AauthService } = require('../AuthService/AuthService');\r\nconst { default: TokenService } = require('../TokenService/TokenService');\r\n\r\nclass JwtErrorService {\r\n\r\n\tstatic async refreshByErr(err) {\r\n\t\tif (err.name === 'jwt expired') {\r\n            const result = await AauthService.refreshAccessToken(TokenService.getRefreshToken());\r\n            if (result.err) {\r\n                TokenService.clear();\r\n                return false\r\n            } else {\r\n                TokenService.setAccessToken(result.access_token);\r\n                return result.access_token\r\n            }\r\n\t\t} else {\r\n            return false\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default JwtErrorService;\r\n","module.exports = __webpack_public_path__ + \"static/media/map1.581af8d4.png\";","module.exports = __webpack_public_path__ + \"static/media/map2.221acc59.png\";","module.exports = __webpack_public_path__ + \"static/media/map3.2129aafa.png\";","import baseUrl from './baseUrl';\r\n\r\nexport const friendListUrl = baseUrl + '/api/friends';\r\nexport const addFriendUrl = baseUrl + '/api/friends/add';\r\nexport const removeFriendUrl = baseUrl + '/api/friends/remove';\r\n","import { createContext } from 'react'\r\nimport io from 'socket.io-client';\r\nimport socketUrl from '../urls/socketUrl';\r\n\r\nconst SocketContext = createContext({\r\n    socket: io.connect(socketUrl)\r\n})\r\nexport default  SocketContext;","import React from 'react'\r\nimport './AuthInput.scss'\r\n\r\nexport default function AuthInput({placeHodler = null, ...rest}) {\r\n    return (\r\n        <input type=\"text\" className=\"authInput\" placeholder={placeHodler} {...rest}/>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport AuthInput from '../../components/AuthInput/AuthInput';\r\nimport './Auth.scss';\r\nimport AuthService from '../../services/AuthService/AuthService';\r\n\r\nfunction Auth({ setSocket }) {\r\n\tconst [isLogin, setIsLogin] = useState(false);\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [so2_id, setSo2_id] = useState('');\r\n\tconst [so2_nickname, setSo2_nickname] = useState('');\r\n\tconst [err, setErr] = useState('');\r\n\tconst [isAuthtorizing, setIsAuthtorizing] = useState(false);\r\n\r\n\tasync function signUp() {\r\n\t\tif (\r\n\t\t\temail.length > 2 &&\r\n\t\t\tusername.length > 2 &&\r\n\t\t\tpassword.length > 2 &&\r\n\t\t\tso2_id.length > 2 &&\r\n\t\t\tso2_nickname.length > 2 &&\r\n\t\t\t!isAuthtorizing\r\n\t\t) {\r\n\t\t\tsetIsAuthtorizing(true);\r\n\t\t\tconst result = await AuthService.singup(username, password, email, so2_nickname, so2_id);\r\n\t\t\t\r\n\t\t\tif (result.err) {\r\n\t\t\t\tsetErr(result.err);\r\n\t\t\t\tsetIsAuthtorizing(false);\r\n\t\t\t} else {\r\n\t\t\t\tawait AuthService.authorize().then((socket) => {\r\n\t\t\t\t\tconsole.log(socket, 'signing up');\r\n\t\t\t\t\tsetSocket(socket);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetErr('Минимальная длинна каждого поля 2 символа');\r\n\t\t}\r\n\t}\r\n\r\n\tasync function signIn() {\r\n\t\tif (username.length > 2 && password.length > 2 && isAuthtorizing === false) {\r\n\t\t\tsetIsAuthtorizing(true);\r\n\t\t\tconst signinResult = await AuthService.signin(username, password);\r\n\r\n\t\t\tif (!signinResult.err) {\r\n\t\t\t\tconst socket = await AuthService.authorize();\r\n\t\t\t\tsetSocket(socket);\r\n\t\t\t} else {\r\n\t\t\t\tsetErr(signinResult.err);\r\n\t\t\t\tsetIsAuthtorizing(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetErr('Минимальная длинна челена 2 символа')\r\n\t\t}\r\n\t}\r\n\r\n\tif (isLogin) {\r\n\t\treturn (\r\n\t\t\t<div className=\"auth\">\r\n\t\t\t\t<AuthInput placeHodler=\"Никнейм\" name=\"email\" onChange={(e) => setUsername(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"Пароль\" name=\"password\" onChange={(e) => setPassword(e.target.value)} />\r\n\r\n\t\t\t\t<p className=\"err\">{err}</p>\r\n\t\t\t\t<button className={`signin ${isAuthtorizing}`} onClick={() => signIn()}>\r\n\t\t\t\t\tВойти\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={`signup ${isAuthtorizing}`} onClick={() => setIsLogin(false)}>\r\n\t\t\t\t\tНет аккаунта\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"auth\">\r\n\t\t\t\t<AuthInput placeHodler=\"Email\" name=\"new email\" onChange={(e) => setEmail(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"Никнейм\" name=\"new nickname\" onChange={(e) => setUsername(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"Пароль\" name=\"new password\" onChange={(e) => setPassword(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"SO2 никнейм\" onChange={(e) => setSo2_nickname(e.target.value)} />\r\n\t\t\t\t<AuthInput placeHodler=\"SO2 id\" onChange={(e) => setSo2_id(e.target.value)} />\r\n\r\n\t\t\t\t<p className=\"err\">{err}</p>\r\n\t\t\t\t<button className={`signup ${isAuthtorizing}`} onClick={() => signUp()}>\r\n\t\t\t\t\tЗарегистрироваться\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className={`signin ${isAuthtorizing}`} onClick={() => setIsLogin(true)}>\r\n\t\t\t\t\tУже есть аккаунт\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Auth;\r\n","import React, { useContext } from 'react';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport { Route } from 'react-router';\r\nimport Auth from '../../views/Auth/Auth';\r\n\r\nexport default function PrivateRoute({ path, setSocket, children, ...rest }) {\r\n\tconst { socket } = useContext(SocketContext);\r\n\t\r\n\tif (!socket) {\r\n\t\treturn <Auth setSocket={setSocket} />;\r\n\t} else {\r\n\t\treturn (\r\n\t\t<Route path={path} {...rest} >\r\n\t\t\t{children}\r\n\t\t</Route>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport './PreLoader.scss';\r\n\r\nexport default function PreLoader() {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"dot first\"></div>\r\n            <div className=\"dot second\"></div>\r\n            <div className=\"dot last\"></div>\r\n        </div>\r\n    )\r\n}","export const frontAuthUrl = '/auth'","const { default: baseUrl } = require(\"./baseUrl\");\r\n\r\nexport const profileUrl = baseUrl + '/api/user';\r\nexport const profileByIdUrl = baseUrl + '/api/user/';\r\n","import { profileUrl } from '../../urls/profileUrls';\r\nimport JwtErrorService from '../JwtErrorService/JwtErrorService';\r\nimport FetchService from '../FetchService/FetchService';\r\n\r\nexport default class ProfileService {\r\n\tstatic async GetOwnProfie() {\r\n\t\tconst res = await FetchService.get(profileUrl);\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'get profile');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn body;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async GetProfileByUsername(username) {\r\n\t\tconst res = await FetchService.get(profileUrl, {\r\n\t\t\tusername: username,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body, 'get profile by username');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconst result = await JwtErrorService.refreshByErr(body.err);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.GetProfileByUsername(username);\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn body.user;\r\n\t\t}\r\n\t}\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ProfileService from '../../services/ProfileService/ProfileService';\r\n\r\nimport './ProfileData.scss';\r\n\r\nexport default function ProfileData({ profileData = null }) {\r\n\tconst [profile, setProfile] = useState({\r\n\t\tusername: '',\r\n\t\trating: 0,\r\n\t\tbio: '',\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tif (profileData) {\r\n\t\t\tsetProfile(profileData);\r\n\t\t} else {\r\n\t\t\tProfileService.GetOwnProfie().then((profile) => {\r\n\t\t\t\tif (profile) {\r\n\t\t\t\t\tsetProfile(profile);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, [profileData]);\r\n\r\n\treturn (\r\n\t\t<div className=\"userData\">\r\n\t\t\t<div className=\"avatar\"></div>\r\n\t\t\t<div className=\"textData\">\r\n\t\t\t\t<div className=\"username\">{profile.username}</div>\r\n\t\t\t\t<div className=\"rating\">{profile.rating}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bio\">{profile.bio}</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import baseUrl from \"./baseUrl\";\r\n\r\nexport const inviteToPartyUrl = baseUrl + '/api/party/invite';\r\nexport const acceptInviteUrl = baseUrl + '/api/party/join';\r\nexport const rejectInviteUrl = baseUrl + '/api/party/reject'\r\nexport const leavePartyUrl = baseUrl + '/api/party/leave';\r\nexport const getPartyUrl = baseUrl + '/api/party/';\r\nexport const kickFromPartyUrl = baseUrl + '/api/party/kick'\r\n","import {\r\n\tinviteToPartyUrl,\r\n\tacceptInviteUrl,\r\n\tleavePartyUrl,\r\n\tgetPartyUrl,\r\n\trejectInviteUrl,\r\n\tkickFromPartyUrl,\r\n} from '../../urls/partyUrls';\r\nimport FetchService from '../FetchService/FetchService';\r\n\r\nexport default class PartyService {\r\n\tstatic async sendInvite(username) {\r\n\t\tconst res = await FetchService.post(inviteToPartyUrl, {\r\n\t\t\tusername: username,\r\n\t\t});\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'send invite');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async acceptInvite(id) {\r\n\t\tconsole.log(id);\r\n\t\tconst res = await FetchService.post(acceptInviteUrl, {\r\n\t\t\tid: id,\r\n\t\t});\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'accept invite');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async rejectInvite(id) {\r\n\t\tconsole.log(id);\r\n\r\n\t\tconst res = await FetchService.post(rejectInviteUrl, {\r\n\t\t\tid: id,\r\n\t\t});\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'reject invite');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async leaveParty() {\r\n\t\tconst res = await FetchService.post(leavePartyUrl);\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'leave party');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async kick(username) {\r\n\t\tconst res = await FetchService.post(kickFromPartyUrl, {\r\n\t\t\tusername: username,\r\n\t\t});\r\n\t\tconsole.log(res.body);\r\n\r\n\t\tif (res.body.err) {\r\n\t\t\tconsole.error(res.body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn res.body;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async getParty() {\r\n\t\tconst res = await FetchService.get(getPartyUrl)\r\n\r\n\t\tconst body = await res.body;\r\n\t\tconsole.log(body, 'gett party');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t} else {\r\n\t\t\treturn body.data;\r\n\t\t}\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport './btns.scss'\r\n\r\nexport function CancelBtn({ children, ...rest }) {\r\n\treturn (\r\n\t\t<button className=\"btns cancel\" {...rest}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport function SubmitBtn({ children, ...rest }) {\r\n\treturn (\r\n\t\t<button className=\"btns submit\" {...rest}>\r\n\t\t\t{children}\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport function DeleteBtn({...rest}) {\r\n\treturn (\r\n\t\t<button className=\"deleteBtn\" {...rest}>X</button>\r\n\t)\r\n}","import React from 'react';\r\nimport './Overlay.scss';\r\n\r\nexport default function Overlay({ show, children }) {\r\n    return (\r\n        <div className={\"overlay \" + show}>{children}</div>\r\n    )\r\n}","import React, { useContext, useState, useEffect } from 'react';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport './Party.scss';\r\nimport PartyService from '../../services/PartyService/PartyService';\r\nimport { CancelBtn, SubmitBtn, DeleteBtn } from '../btns/btns';\r\nimport Overlay from '../Overlay/Overlay';\r\nimport ProfileService from '../../services/ProfileService/ProfileService';\r\n\r\nexport default function Party({ partyData = null, profileData = null }) {\r\n\tconst { socket } = useContext(SocketContext);\r\n\tconst [party, setParty] = useState({\r\n\t\tplayers: [],\r\n\t\towner: ''\r\n\t});\r\n\tconst [user, setUser] = useState({\r\n\t\tid: '',\r\n\t\tusername: '',\r\n\t});\r\n\tconst [target, setTarget] = useState('');\r\n\tconst [showOverlay, setShowOverlay] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('party', (party) => {\r\n\t\t\tconsole.log(party, 'socket party');\r\n\t\t\tsetParty(party.data);\r\n\t\t});\r\n\r\n\t\tif (!partyData) {\r\n\t\t\tPartyService.getParty().then((party) => {\r\n\t\t\t\tconsole.log(party, 'fetch party');\r\n\t\t\t\tsetParty(party);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tsocket.off('party');\r\n\t\t};\r\n\t}, [socket, partyData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!profileData) {\r\n\t\t\tProfileService.GetOwnProfie().then((profile) => {\r\n\t\t\t\tif (profile) {\r\n\t\t\t\t\tsetUser(profile);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}, [profileData]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (partyData) {\r\n\t\t\tsetParty(partyData)\r\n\t\t}\r\n\t\tif (profileData) {\r\n\t\t\tsetUser(profileData)\r\n\t\t}\r\n\t}, [partyData, profileData])\r\n\r\n\tuseEffect(() => {\r\n\t\tparty.players.sort((a, b) => b.id - a.id);\r\n\t}, [party])\r\n\r\n\tfunction sendInvte() {\r\n\t\tsetShowOverlay(false);\r\n\t\tconsole.log(target);\r\n\t\tPartyService.sendInvite(target);\r\n\t\tsetTarget('');\r\n\t}\r\n\r\n\tfunction leave() {\r\n\t\tPartyService.leaveParty();\r\n\t}\r\n\r\n\tfunction kick(username) {\r\n\t\tPartyService.kick(username);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"party\">\r\n\t\t\t<Overlay show={showOverlay}>\r\n\t\t\t\t<div className=\"invite\">\r\n\t\t\t\t\t<input type=\"target\" onChange={(e) => setTarget(e.target.value)} value={target} />\r\n\t\t\t\t\t<div className=\"controls\">\r\n\t\t\t\t\t\t<CancelBtn onClick={() => setShowOverlay(false)}>Отмена</CancelBtn>\r\n\t\t\t\t\t\t<SubmitBtn onClick={() => sendInvte()}>Отправить</SubmitBtn>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Overlay>\r\n\r\n\t\t\t{party.players.map((player) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={player.username} className=\"member\">\r\n\t\t\t\t\t\t{player.username}\r\n\t\t\t\t\t\t{user.id === party.owner && user.username !== player.username ? (\r\n\t\t\t\t\t\t\t<DeleteBtn onClick={() => kick(player.username)} />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tparty.owner === player.id ?\r\n\t\t\t\t\t\t\t\t<div className=\"crown\"></div>\r\n\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t\t{party.players.length !== 5 ? (\r\n\t\t\t\t<div className=\"addMember member\" onClick={() => setShowOverlay(true)}>\r\n\t\t\t\t\tПригласить игрока\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t\t{party.players.length !== 1 ? (\r\n\t\t\t\t<div className=\"cancel member\" onClick={() => leave()}>\r\n\t\t\t\t\tВыйти\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t\t''\r\n\t\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","const { default: baseUrl } = require(\"./baseUrl\");\r\n\r\nexport const joinQueueUrl = baseUrl + '/api/queue/join';\r\nexport const leaveQueueUrl = baseUrl + '/api/queue/leave';\r\n\r\n","import { joinQueueUrl, leaveQueueUrl } from \"../../urls/queueUrls\";\r\nimport FetchService from \"../FetchService/FetchService\";\r\n\r\nclass QueueService {\r\n    static async JoinQueue() {\r\n        const res = await FetchService.get(joinQueueUrl);\r\n\r\n        const body = await res.body;\r\n        console.log(body, 'join queue');\r\n\r\n        if (body.err) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    static async LeaveQueue() {\r\n        const res = await FetchService.get(leaveQueueUrl);\r\n        \r\n        const body = await res.body;\r\n        console.log(body, 'leave queue');\r\n\r\n        if (body.err) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\nexport default QueueService;","import React, { useContext, useState, useEffect } from 'react';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport './Search.scss';\r\nimport QueueService from '../../services/QueueService/QueueService';\r\n\r\nconst partyStatuses = {\r\n\t'WAIT': 0,\r\n\t'QUEUE': 1,\r\n\t'IN_GAME': 2\r\n}\r\n\r\n\r\nexport default function Search({partyData = null}) {\r\n\tconst { socket } = useContext(SocketContext);\r\n\tconst [isInSearch, setIsInSearch] = useState(false);\r\n\tconst [shake, setShake] = useState('');\r\n\r\n\tfunction joinQueue() {\r\n\t\tif (isInSearch) {\r\n\t\t\tQueueService.LeaveQueue().then((result) => (result ? setIsInSearch(false) : shakeAnime()));\r\n\t\t} else {\r\n\t\t\tQueueService.JoinQueue().then((result) => (result ? setIsInSearch(true) : shakeAnime()));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction shakeAnime() {\r\n\t\tsetShake('shake');\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetShake('');\r\n\t\t}, 500);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('queue', (context) => {\r\n\t\t\tconsole.log(context, 'search');\r\n\t\t\tif (context.data) {\r\n\t\t\t\tsetIsInSearch(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetIsInSearch(false);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tsocket.off('queue');\r\n\t\t};\r\n\t}, [socket]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (partyData) {\r\n\t\t\tif (partyData.status === partyStatuses.QUEUE) {\r\n\t\t\t\tsetIsInSearch(true);\r\n\t\t\t} else {\r\n\t\t\t\tsetIsInSearch(false);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [partyData])\r\n\r\n\treturn (\r\n\t\t<div className=\"search\">\r\n\t\t\t<button className={(isInSearch ? 'red ' : ' ') + shake} onClick={() => joinQueue()}>\r\n\t\t\t\t{isInSearch ? 'Отмена' : 'Искать'}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport './MathcMaking.scss';\r\nimport ProfileData from '../../components/ProfileData/ProfileData';\r\nimport Party from '../../components/Party/Party';\r\nimport Search from '../../components/Search/Search';\r\nimport useService from '../../hooks/useService';\r\nimport ProfileService from '../../services/ProfileService/ProfileService';\r\nimport PreLoader from '../../components/PreLoader/PreLoader';\r\nimport PartyService from '../../services/PartyService/PartyService';\r\n\r\nexport default function MatchMaking() {\r\n\tconst { request, isLoading } = useService();\r\n\tconst [profile, setProfile] = useState({\r\n\t\tusername: '',\r\n\t});\r\n\tconst [party, setParty] = useState({\r\n\t\tplayers: [],\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\trequest(ProfileService.GetOwnProfie, true).then((profileData) => {\r\n            setProfile(profileData);\r\n        });\r\n        request(PartyService.getParty, true).then(paryData => {\r\n            setParty(paryData);\r\n        });\r\n\t}, [request]);\r\n\r\n\tif (isLoading) {\r\n        return (\r\n            <PreLoader />   \r\n        )\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"matchMaking\">\r\n\t\t\t\t<ProfileData profileData={profile}/>\r\n\t\t\t\t<Search partyData={party}/>\r\n\t\t\t\t<Party profileData={profile} partyData={party}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport default function useService() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    \r\n    const request = useCallback( async (serviceFunc, needLoading) => {\r\n        if (needLoading) {\r\n            setIsLoading(true);\r\n        }   \r\n        const result = await serviceFunc();\r\n        setIsLoading(false);\r\n        return result;\r\n    }, [])\r\n\r\n    return {request, isLoading}\r\n}","import React from 'react';\r\n\r\nimport './Navbar.scss';\r\nimport {  useLocation } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 } from 'uuid';\r\n\r\n\r\nconst routes = [\r\n    {\r\n        url: '/',\r\n        name: 'MM'\r\n    },\r\n    {\r\n        url: '/friends',\r\n        name: 'Friends'\r\n    },\r\n    {\r\n        url: '/notifications',\r\n        name: 'nots'\r\n    },\r\n    {\r\n        url: '/game/lobby',\r\n        name: 'Lobby'\r\n    }\r\n]\r\n\r\nexport default function Navbar() {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            {\r\n                routes.map(route => {\r\n                    return (\r\n                        <Link\r\n                            className={location.pathname === route.url ? \"navLink active\" : 'navLink'}\r\n                            to={route.url}\r\n                            key={v4()}\r\n                            >\r\n                            {route.name}\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","import FetchService from '../FetchService/FetchService';\r\n\r\nconst { addFriendUrl, removeFriendUrl, friendListUrl } = require('../../urls/friendsUrls');\r\nconst { default: JwtErrorService } = require('../JwtErrorService/JwtErrorService');\r\n\r\nclass FriendsService {\r\n\tstatic async addFriend(friendName) {\r\n\t\tconst res = await FetchService.post(addFriendUrl, {\r\n\t\t\tusername: friendName,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body, 'add friend');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconst result = await JwtErrorService.refreshByErr(body.err);\r\n\t\t\tif (result) {\r\n\t\t\t\tthis.addFriend(friendName);\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async removeFriend(friendId) {\r\n\t\tconst res = await FetchService.post(removeFriendUrl, {\r\n\t\t\tid: friendId,\r\n\t\t});\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body, 'remove friend');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async getFriends() {\r\n\t\tconst res = await FetchService.get(friendListUrl);\r\n\r\n\t\tconst body = res.body;\r\n\t\tconsole.log(body, 'get friends');\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn body;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default FriendsService;\r\n","import React from 'react';\r\n\r\nimport './Friend.scss';\r\nimport { SubmitBtn, DeleteBtn } from '../btns/btns';\r\nimport PartyService from '../../services/PartyService/PartyService';\r\nimport FriendsService from '../../services/FriendsService/FriendsService';\r\n\r\nexport default function Friend({data, destroy = () => {}}) {\r\n\r\n    function RemoveFriend() {\r\n        FriendsService.removeFriend(data.id)\r\n        destroy();\r\n    }\r\n\r\n    function InviteToParty() {\r\n        PartyService.sendInvite(data.username);\r\n    }\r\n\r\n    return (\r\n        <div className=\"friend\">\r\n            <div className=\"data\">\r\n                <div className=\"username\">{data.username}</div>\r\n            </div>\r\n            <div className=\"controls\">\r\n                <SubmitBtn onClick={() => InviteToParty()}>Пригласить</SubmitBtn>\r\n                <DeleteBtn onClick={() => RemoveFriend()} />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport FriendsService from '../../services/FriendsService/FriendsService';\r\nimport { SubmitBtn, CancelBtn } from '../../components/btns/btns';\r\nimport Overlay from '../../components/Overlay/Overlay';\r\n\r\nimport './Friends.scss'\r\nimport Friend from '../../components/Friend/Friend';\r\n\r\nexport default function Friends() {\r\n    const [friends, setFriends] = useState([]);\r\n    const [target, setTarget] = useState('');\r\n\r\n    const [showOverlay, setShowOverlay] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        FriendsService.getFriends().then(friends => {\r\n            if (friends) {\r\n                console.log(friends[0])\r\n                setFriends(friends);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function sendReq() {\r\n        setShowOverlay(false);\r\n        FriendsService.addFriend(target);\r\n        setTarget('');\r\n    }\r\n\r\n    function destroy(index) {\r\n        setFriends(prevState => {\r\n            const friends = [...prevState];\r\n            friends.splice(index);\r\n            return friends;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"friends\">\r\n            <div className=\"controls\">\r\n                <SubmitBtn onClick={() => setShowOverlay(true)}>Добавить</SubmitBtn>\r\n            </div>\r\n            <Overlay show={showOverlay}>\r\n                <div className=\"addFriend\">\r\n                    <input type=\"target\" onChange={(e) => setTarget(e.target.value)} value={target} />\r\n                    <div className=\"controls\">\r\n                        <CancelBtn onClick={() => setShowOverlay(false)}>Отмена</CancelBtn>\r\n                        <SubmitBtn onClick={() => sendReq()}>Отправить</SubmitBtn>\r\n                    </div>\r\n                </div>\r\n            </Overlay>\r\n            {friends.map((friend, index) => {\r\n                return (\r\n                    <Friend key={friend.username} data={friend} destroy={() => destroy(index)}/>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n} ","import React, { useState } from 'react';\r\nimport { CancelBtn, SubmitBtn } from '../btns/btns';\r\nimport PartyService from '../../services/PartyService/PartyService';\r\n\r\nimport './Invite.scss'\r\n\r\nexport default function Invite({ id, from,  destroy }) {\r\n\tconst [isRemoving, setIsRemoving] = useState('')\r\n\r\n\tfunction cancel(id) {\r\n\t\tsetIsRemoving('remove')\r\n\t\tsetTimeout(() => {\r\n\t\t\tdestroy();\r\n\t\t}, 340)\r\n\t\tPartyService.rejectInvite(id);\r\n\t}\r\n\r\n\tfunction accept(id) {\r\n\t\tsetIsRemoving('remove')\r\n\t\tsetTimeout(() => {\r\n\t\t\tdestroy();\r\n\t\t}, 340)\r\n\t\tPartyService.acceptInvite(id);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={\"notification invite \" + isRemoving}>\r\n\t\t\t<p>Инвайт от {from}</p>\r\n\t\t\t<div className=\"controls\">\r\n\t\t\t\t<CancelBtn onClick={() => cancel(id)}>Отмена</CancelBtn>\r\n\t\t\t\t<SubmitBtn onClick={() => accept(id)}>Принять</SubmitBtn>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useState } from 'react';\r\nimport { CancelBtn, SubmitBtn } from '../btns/btns';\r\nimport FriendsService from '../../services/FriendsService/FriendsService';\r\n\r\nexport default function FriendReq({ from, destroy }) {\r\n\tconst [removing, setRemoving] = useState('');\r\n\r\n\tfunction cancel(username) {\r\n\t\tsetRemoving('remove')\r\n\t\tsetTimeout(() => {\r\n\t\t\tdestroy()\r\n\t\t}, 340)\r\n\t}\r\n\r\n\tfunction accept(username) {\r\n\t\tsetRemoving('remove')\r\n\t\tsetTimeout(() => {\r\n\t\t\tdestroy()\r\n\t\t}, 340)\r\n        FriendsService.addFriend(username)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={\"notification invite \" + removing}>\r\n\t\t\t<p>Приглашение в друзья от {from.username}</p>\r\n\t\t\t<div className=\"controls\">\r\n\t\t\t\t<CancelBtn onClick={() => cancel(from.username)}>Отмена</CancelBtn>\r\n\t\t\t\t<SubmitBtn onClick={() => accept(from.username)}>Принять</SubmitBtn>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport Invite from '../Invite/Invite';\r\nimport FriendReq from '../FriendReq/FriendReq';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport './Notifications.scss';\r\n\r\nexport default function Notifications() {\r\n\tconst { socket } = useContext(SocketContext);\r\n\tconst [notifications, setNotifications] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst destroy = (index) => {\r\n\t\t\tsetNotifications((prevState) => {\r\n\t\t\t\tconst nots = [...prevState];\r\n\t\t\t\tnots.splice(index, 1);\r\n\t\t\t\treturn nots;\r\n\t\t\t});\r\n\t\t};\r\n\t\tif (socket) {\r\n\t\t\tsocket.on('notification', (notification) => {\r\n\t\t\t\tconsole.log(notification);\r\n\t\t\t\tswitch (notification.type) {\r\n\t\t\t\t\tcase 'party/invite':\r\n\t\t\t\t\t\tsetNotifications((notifications) => {\r\n\t\t\t\t\t\t\tconsole.log(notification.data.players.find(player => player.id === notification.data.owner))\r\n\t\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t\t...notifications,\r\n\t\t\t\t\t\t\t\t<Invite\r\n\t\t\t\t\t\t\t\t\tid={notification.data.id}\r\n\t\t\t\t\t\t\t\t\tfrom={notification.data.players.find(player => player.id === notification.data.owner).username}\r\n\t\t\t\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\t\t\t\tdestroy={() => destroy(notifications.length)}\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'friends/add':\r\n\t\t\t\t\t\tsetNotifications((notifications) => {\r\n\t\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t\t...notifications,\r\n\t\t\t\t\t\t\t\t<FriendReq\r\n\t\t\t\t\t\t\t\t\tfrom={notification.data}\r\n\t\t\t\t\t\t\t\t\tkey={uuid()}\r\n\t\t\t\t\t\t\t\t\tdestroy={() => destroy(notifications.length)}\r\n\t\t\t\t\t\t\t\t/>,\r\n\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tif (socket) {\r\n\t\t\t\tsocket.off('notification');\r\n\t\t\t}\r\n\t\t};\r\n\t}, [socket]);\r\n\r\n\treturn <div className=\"notifications\">{notifications}</div>;\r\n}\r\n","import baseUrl from \"./baseUrl\";\r\n\r\nexport const getNotsUrl = baseUrl + '/api/notifications';","import { getNotsUrl } from '../../urls/notificationsUrls';\r\nimport FetchService from '../FetchService/FetchService';\r\n\r\nexport default class NotificationsService {\r\n\tstatic async get() {\r\n\t\tconst res = await FetchService.get(getNotsUrl);\r\n        \r\n        const body = await res.body;\r\n        console.log(body, 'get notifications')\r\n\r\n        if (body.err) {\r\n            console.error(body.err)\r\n            return false;\r\n        } else {\r\n            return body;\r\n        }\r\n\t}\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport NotificationsService from '../../services/NotificationsService/NotificationsService';\r\nimport FriendReq from '../../components/FriendReq/FriendReq';\r\nimport Invite from '../../components/Invite/Invite';\r\n\r\nimport './notificationsView.scss'\r\n\r\nexport default function NotificationsView() {\r\n    const [nots, setNots] = useState({\r\n        party: [],\r\n        friends: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        NotificationsService.get().then((nots) => {\r\n            if (nots) {\r\n                setNots(nots);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    function destroyFriendReq(index) {\r\n        setNots(prevState => {\r\n            const nots = {\r\n                ...prevState\r\n            };\r\n            nots.friends.splice(index, 1);\r\n            return nots;\r\n        })\r\n    }\r\n\r\n    function destroyPartyReq(index) {\r\n        setNots(prevState => {\r\n            const nots = {\r\n                ...prevState\r\n            };\r\n            nots.party.splice(index, 1);\r\n            return nots;\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"notificationsView\">\r\n            {\r\n                nots.friends.map((friend, index) => {\r\n                    return (\r\n                        <FriendReq from={friend.username} destroy={() => destroyFriendReq(index)}/>\r\n                    )\r\n                })\r\n            }\r\n            {\r\n                nots.party.map((party, index) => {\r\n                    return (\r\n                        <Invite from={party.players.find(x => x.id === party.owner).username} id={party.id} destroy={() => destroyPartyReq(index)}/>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SocketContext from '../../context/SocketContext';\r\n\r\nexport default function Redirects() {\r\n    const { socket } = useContext(SocketContext);\r\n    const [redirect, setRedirect] = useState(null)\r\n\r\n    useEffect(() => {\r\n        socket.on('redirect', (context) => {\r\n            switch (context.type) {\r\n                case 'game':\r\n                    setRedirect(<Redirect to=\"/game/lobby\" />);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.off('redirect')\r\n        }\r\n    }, [socket])\r\n\r\n    return redirect;\r\n}","import baseUrl from './baseUrl';\r\n\r\nexport const gameVoteUrl = baseUrl + '/api/game/vote';\r\nexport const gameUrl = baseUrl + '/api/game/';\r\nexport const chatMsgs = baseUrl + '/api/game/messages';\r\n","import FetchService from '../FetchService/FetchService';\r\nimport { gameVoteUrl, gameUrl, chatMsgs } from '../../urls/gameUrls';\r\n\r\nexport default class GameService {\r\n\t/**\r\n\t *\r\n\t * @param {number} index\r\n\t */\r\n\tstatic async vote(index) {\r\n\t\tconsole.log(index);\r\n\t\tconst res = await FetchService.post(gameVoteUrl, {\r\n\t\t\tindex: index,\r\n\t\t});\r\n\t\tconst body = res.body;\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn body.data;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic async GetGame() {\r\n\t\tconst res = await FetchService.get(gameUrl);\r\n\t\tconst body = res.body;\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn body.data;\r\n\t\t}\r\n    }\r\n    \r\n    static async getGameMsgs() {\r\n        const res = await FetchService.get(chatMsgs);\r\n\t\tconst body = res.body;\r\n\r\n\t\tif (body.err) {\r\n\t\t\tconsole.error(body.err);\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn body.data;\r\n\t\t}\r\n    }\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react';\r\n\r\nimport './Voting.scss';\r\nimport SocketContext from '../../context/SocketContext';\r\n\r\n\r\n\r\nimport map1 from './map1.png';\r\nimport map2 from './map2.png';\r\nimport map3 from './map3.png';\r\nimport GameService from '../../services/GameService/GameService';\r\n\r\nconst maps = [\r\n    {\r\n        name: 'map1',\r\n        url: map1\r\n    },\r\n    {\r\n        name: 'map2',\r\n        url: map2\r\n    },\r\n    {\r\n        name: 'map3',\r\n        url: map3\r\n    }\r\n]\r\n\r\n\r\nexport default function Voting({ profile, game }) {\r\n    const { socket } = useContext(SocketContext);\r\n    const [votes, setVotes] = useState([]);\r\n    const [lastFetch, setLastFetch] = useState(new Date().getTime() - 5000);\r\n    const [timer, setTimer] = useState(30);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (game) {\r\n                const newTime = (new Date(game.voteStartAt).getTime() - new Date().getTime()) / 1000 * -1;\r\n                console.log(30 - Math.round(newTime))\r\n                setTimer(30 - Math.round(newTime))\r\n            }\r\n        }, 1000)\r\n\r\n        return () => {\r\n            clearInterval(interval)\r\n        }\r\n    }, [game]);\r\n\r\n\r\n    function vote(index) {\r\n        if (new Date().getTime() - lastFetch > 3000) {\r\n            GameService.vote(index).then((data) => {\r\n                if (data) {\r\n                    console.log(data);\r\n                    setVotes(data);\r\n                    setLastFetch(new Date().getTime());\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('game/vote', (context) => {\r\n            if (context.type === 'vote') {\r\n                console.log(context.data, 'votes')\r\n                setVotes(context.data);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            socket.off('game/vote');\r\n        }\r\n    }, [socket]);\r\n\r\n    return (\r\n        <div className=\"voting\">\r\n            {\r\n                maps.map((map, index) => {\r\n                    const mapVotes = votes.filter(\r\n                        vote =>\r\n                            vote.userVote.index === index\r\n                            &&\r\n                            vote.userVote.state === 1\r\n                    );\r\n\r\n                    const isVoted = mapVotes.find(vote => vote.userId === profile.id);\r\n\r\n                    return (\r\n                        <div className={isVoted ? \"map selected\" : \"map\"} onClick={() => vote(index)} style={{ backgroundImage: `url(${map.url})` }}>\r\n                            {map.name}\r\n                            <div className=\"amount\">{mapVotes.length}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            <div className=\"timer\">{timer} S</div>\r\n        </div>\r\n    )\r\n}","import React, { useRef, useEffect, useState, useContext, useCallback } from 'react';\r\n\r\nimport './Chat.scss';\r\nimport Overlay from '../Overlay/Overlay';\r\nimport SocketContext from '../../context/SocketContext';\r\nimport GameService from '../../services/GameService/GameService';\r\n\r\nexport default function Chat({ profile, setShow, show }) {\r\n    const inpRef = useRef();\r\n    const messagesEndRef = useRef();\r\n    const [msg, setMsg] = useState('');\r\n    const [msgs, setMsgs] = useState([]);\r\n    const { socket } = useContext(SocketContext);\r\n\r\n    const scrollToBottom = useCallback(() => {\r\n        if (show) {\r\n            //@ts-ignore\r\n            messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n    }, [show])\r\n\r\n    const sendMsg = useCallback(() => {\r\n\r\n        if (msg.length > 1) {\r\n            socket.emit('message', {\r\n                type: 'game',\r\n                data: {\r\n                    content: msg\r\n                }\r\n            })\r\n            setMsg('');\r\n            //@ts-ignore\r\n            inpRef.current.textContent = ''\r\n            setTimeout(() => {\r\n                scrollToBottom();\r\n            }, 300)\r\n        }\r\n    }, [socket, msg, scrollToBottom])\r\n\r\n\r\n    useEffect(() => {\r\n        scrollToBottom();\r\n    }, [scrollToBottom])\r\n\r\n    useEffect(() => {\r\n        socket.on('message', context => {\r\n            console.log(context)\r\n            setMsgs(prevState => {\r\n                const msgs = [...prevState];\r\n                msgs.push(context.data);\r\n                return msgs;\r\n            });\r\n        })\r\n    }, [socket])\r\n\r\n    useEffect(() => {\r\n        GameService.getGameMsgs().then(msgs => {\r\n            if (msgs) {\r\n                setMsgs(msgs);\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Overlay show={show}>\r\n            <div className=\"chat\">\r\n                <div className=\"exit\" onClick={() => setShow(false)}>Выйти</div>\r\n                <div className=\"msgs\">\r\n                    {\r\n                        msgs.map(msg => {\r\n\r\n                            return (\r\n                                <div className={msg.author === profile.username ? \"msg my\" : \"msg\"}>\r\n                                    <div className=\"from\">{msg.author}</div>\r\n                                    <div className=\"content\">{msg.content}</div>\r\n                                </div>\r\n                            )\r\n\r\n                        })\r\n                    }\r\n                    <div className=\"end\" ref={messagesEndRef}></div>\r\n                </div>\r\n                <div className=\"controls\">\r\n                    <div ref={inpRef} contentEditable={true} role=\"textbox\" onInput={e => setMsg(e.currentTarget.textContent)} onKeyDown={e => {\r\n                        if (e.keyCode === 13) {\r\n                            sendMsg();\r\n                        }\r\n                    }} className=\"msgInput\"></div>\r\n                    <div className=\"send\" onClick={() => sendMsg()}>►</div>\r\n                </div>\r\n            </div>\r\n        </Overlay>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './Team.scss'\r\n\r\nexport default function Teams({ game }) {\r\n    return (\r\n        <div className=\"teams\">\r\n            <div className=\"team1\">{\r\n                game.team1.map(player => {\r\n                    return (\r\n                        <div className=\"player\">\r\n                            <div className=\"nickname\">{player.gamesInfo.SO2.nickname}</div>\r\n                            <div className=\"id\">{player.gamesInfo.SO2.id}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }</div>\r\n            <div className=\"team2\">{\r\n                game.team2.map(player => {\r\n                    return (\r\n                        <div className=\"player\">\r\n                            <div className=\"nickname\">{player.gamesInfo.SO2.nickname}</div>\r\n                            <div className=\"id\">{player.gamesInfo.SO2.id}</div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }</div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\n\r\nimport './Game.scss';\r\n\r\nimport GameService from '../../services/GameService/GameService';\r\nimport ProfileService from '../../services/ProfileService/ProfileService';\r\nimport Voting from '../../components/Voting/Voting';\r\nimport Chat from '../../components/Chat/Chat';\r\nimport Teams from '../../components/Teams/Teams';\r\nimport SocketContext from '../../context/SocketContext';\r\n\r\nconst statuses = {\r\n    MAP_VOTING: 0,\r\n    CANCELED: 1,\r\n    UNDECIDED: 2,\r\n    WINNER_1: 3,\r\n    WINNER_2: 4,\r\n    DRAW: 5\r\n}\r\n\r\nexport default function Game() {\r\n    const [profile, setProfile] = useState({\r\n        id: -1\r\n    });\r\n    const [game, setGame] = useState({\r\n        status: -1\r\n    });\r\n    const {socket} = useContext(SocketContext);\r\n\r\n    const [showChat, setShowChat] = useState(false);\r\n\r\n    useEffect(() => {\r\n        ProfileService.GetOwnProfie().then(profileData => {\r\n            if (profileData) {\r\n                setProfile(profileData);\r\n            }\r\n        })\r\n\r\n        GameService.GetGame().then(game => {\r\n            if (game) {\r\n                setGame(game)\r\n                console.log(game, 'game')\r\n            }\r\n        })\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        socket.on('game/update', context => {\r\n            if (context.data) {\r\n                setGame(context.data);\r\n            }\r\n        })\r\n    })\r\n\r\n    return (\r\n        <div className=\"game\">\r\n            {\r\n                game.status === statuses.MAP_VOTING\r\n                    ? <Voting profile={profile} game={game} />\r\n                    : ''\r\n            }\r\n            {\r\n                game.status === statuses.UNDECIDED\r\n                    ? <Teams game={game} />\r\n                    : ''\r\n            }\r\n            <div className=\"chatBtn\" onClick={() => setShowChat(true)}>Chat</div>\r\n            <Chat profile={profile} setShow={setShowChat} show={showChat} />\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './App.scss';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\r\nimport SocketContext from './context/SocketContext';\r\nimport AuthService from './services/AuthService/AuthService';\r\nimport TokenService from './services/TokenService/TokenService';\r\nimport PreLoader from './components/PreLoader/PreLoader';\r\nimport { Switch, Route } from 'react-router';\r\nimport Auth from './views/Auth/Auth';\r\nimport { frontAuthUrl } from './frontUrls/frontAuthUrl';\r\nimport MatchMaking from './views/MathMaking/MatchMaking';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Friends from './views/Friends/Friends';\r\nimport Notifications from './components/Notifications/Notifications';\r\nimport NotificationsView from './views/NotificationsView/NotificationsView';\r\nimport Redirects from './components/Redirects/Redirects';\r\nimport Game from './views/Game/Game';\r\n\r\nfunction App() {\r\n\tconst [socket, setSocket] = useState(null);\r\n\tconst [showPreloader, setShowPreloader] = useState(true);\r\n\t//#region auth\r\n\tuseEffect(() => {\r\n\t\tif (TokenService.getAccessToken()) {\r\n\t\t\tAuthService.authorize().then((socket) => {\r\n\t\t\t\tsocket.on('connect', () => console.log('connected'));\r\n\r\n\t\t\t\tsocket.on('disconnect', () => {\r\n\t\t\t\t\tconsole.log('disconnected');\r\n\t\t\t\t\tsetShowPreloader(false);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsocket.on('auth', () => {\r\n\t\t\t\t\tconsole.log('authed');\r\n\t\t\t\t\tsetSocket(socket);\r\n\t\t\t\t\tsetShowPreloader(false);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tsocket.on('unauth', () => {\r\n\t\t\t\t\tconsole.log('unauth');\r\n\t\t\t\t\tsetShowPreloader(false);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tsetShowPreloader(false);\r\n\t\t}\r\n\t}, []);\r\n\t//#endregion\r\n\r\n\tif (showPreloader) {\r\n\t\treturn <PreLoader />;\r\n\t} else if (socket) {\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<SocketContext.Provider value={{ socket: socket }}>\r\n\t\t\t\t\t<BrowserRouter>\r\n\t\t\t\t\t\t<Notifications />\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/\" setSocket={setSocket} exact>\r\n\t\t\t\t\t\t\t\t<MatchMaking />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/friends\" setSocket={setSocket} exact>\r\n\t\t\t\t\t\t\t\t<Friends />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/notifications\" setSocket={setSocket} exact>\r\n\t\t\t\t\t\t\t\t<NotificationsView />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<PrivateRoute path=\"/game/lobby\" setSocket={setSocket} exact>\r\n\t\t\t\t\t\t\t\t<Game />\r\n\t\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t\t<Route path={frontAuthUrl}>\r\n\t\t\t\t\t\t\t\t<Auth setSocket={setSocket} />\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t<Navbar />\r\n\t\t\t\t\t\t<Redirects />\r\n\t\t\t\t\t</BrowserRouter>\r\n\t\t\t\t</SocketContext.Provider>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\tconsole.log('not auhed');\r\n\t\treturn (\r\n\t\t\t<div className=\"App\">\r\n\t\t\t\t<Auth setSocket={setSocket} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}